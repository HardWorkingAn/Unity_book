프레임이 너무 빨라 작동이 빠르면 
void Awake()
    {
        Application.targetFrameRate = 100; // 최대 100프레임 고정
    }
추가할것

챕터4 자동차 
오브젝트 이동

GameObject.Find("이름"); 를 통해서 변수에 오브젝트를 저장할 수 있다.
transform.Translate(x,y,z); 를 통해서 해당 오브젝트를 좌표기준에서 x y z 좌표 더하여 이동할 수 있다.

GetComponent<type>() 를 사용하기 위해서는 UnityEngine.UI 를 라이브러리를 상속받아야한다.

챕터5 화살 피하기 게임
프리팹 시간(초단위) 충돌감지 사용

getkeydown은 키를 눌렀을 때
getkey 는 키를 누르고있을 때
getkeyup은 키를 때었을 때 동작

Vector2 dir = p1 - p2; //p219 p1 과 p2의 중심점 끼리의 계산하기 위한 좌표값 생성
float d = dir.magnitude; //p1 과 p2의 중심점 끼리의 거리 2차좌표(피타고라스정의) 제곱을 하기 떄문에 - 좌표는 생각x

magnitude 함수는 벡터 타입으로 되어있는 값을 피타고라스 정의를 통하여 길이로 반환한다.

프리팹을 등륵한 오브젝트를 게임씬에서 에셋에 드래그&드롭 하면 프리팹 생성
프리팹을 만들기 전 먼저 오브젝트에 컨트롤러 스크립트를 넣고 프리팹을 만들어야한다.
또한 프리팹을 작동시키기 위해서는 빈 오브젝트 생성 후 하는 C# 스크립트 등륵하고 속성에 프리팹에 오브젝트를 설정

instantiate(인스턴트) 는 게임오브젝트를 생성 destroy 는 삭제
GameObject go = Instantiate(arrowPrefab) as GameObject;
Destroy(gameObject);

this.delta += Time.deltaTime; // Time.deltaTime 은 프레임과 pc성능과 무관하게 시간값을 쌓을 수 있다.

이미지 생성은 생성 -> UI -> 이미지 후 게임씬의 이미지 클릭 후 소스 이미지에서 이미지 선택

UI는 속성의 앵커 기준으로 0, 0 좌표를 가진다.
속성의 이미지 타입을 통하여 이미지를 잘라내는 방법을 선택 할 수 있다. 자세한내용은 p233~p234

★중요★
이미지를 변화하거나 텍스트를 출력하는등 UI오브젝트를 변화하기 위해서는 
GetComponent<type>() 를 사용하기 위해서는 UnityEngine.UI 를 라이브러리를 상속받아야한다.
But.
다른 오브젝트의 스크립트 메소드를 가져올 경우 GetComponent<class>().메소드명 을 통하여 사용이 가능하며 라이브러리 상속 받을 필요가없다.

p246
UI 버튼은 따로 스크립트를 만들 필요없이 캐릭터 컨트롤러 스크립트에 메소드를 생성해 속성의 OnClick() or 클릭시() 에서 + 를 눌러
게임씬의 캐릭터를 선택 후 캐릭터 컨트롤러 스크립트에 생성한 메소드를 등륵 해주면 된다.
